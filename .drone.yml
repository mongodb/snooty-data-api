---
kind: pipeline
type: kubernetes
name: test

trigger:
  branch:
  - main
  - pre-test-errors
  event:
  - push
  - tag

steps:
- name: test
  # Pinning to 18-bullseye as a workaround. See: https://github.com/nodejs/docker-node/issues/1916
  image: node:18-alpine
  commands:
  - npm ci
  - npm run lint
  - npm run test

---
depends_on: ['test']
kind: pipeline
type: kubernetes
name: staging-build

trigger:
  branch:
  - main
  event:
  - push

steps:
# Bulds and publishes Docker image for staging
- name: publish-staging
  image: plugins/kaniko-ecr
  settings:
    create_repository: true
    registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
    repo: docs/${DRONE_REPO_NAME}
    tags:
    - git-${DRONE_COMMIT_SHA:0:7}-staging
    - latest-staging
    access_key:
      from_secret: ecr_access_key
    secret_key:
      from_secret: ecr_secret_key

# Promotes current drone build to staging environment
- name: promote-staging
  image: drone/cli:1.4.0-alpine
  commands:
  - drone build promote mongodb/snooty-data-api ${DRONE_BUILD_NUMBER} staging
  environment:
    DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
    DRONE_TOKEN:
      from_secret: drone_token

---
kind: pipeline
type: kubernetes
name: staging-deploy

trigger:
  event:
  - promote
  target:
  - staging

steps:
# Deploys docker image associated with staging build that triggered promotion
- name: deploy-staging
  image: quay.io/mongodb/drone-helm:v3
  settings:
    chart: mongodb/web-app
    chart_version: 4.12.3
    add_repos: [mongodb=https://10gen.github.io/helm-charts]
    namespace: docs
    release: snooty-data-api
    values: image.tag=git-${DRONE_COMMIT_SHA:0:7}-staging,image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/docs/${DRONE_REPO_NAME},ingress.enabled=true,ingress.hosts[0]=snooty-data-api.docs.staging.corp.mongodb.com
    values_files: ['environments/staging.yml']
    api_server: https://api.staging.corp.mongodb.com
    kubernetes_token:
      from_secret: staging_kubernetes_token

---
depends_on: ['test']
kind: pipeline
type: kubernetes
name: production-build

trigger:
  event:
  - tag

steps:
# Builds and publishes Docker image for production
- name: publish-production
  image: plugins/kaniko-ecr
  settings:
    create_repository: true
    registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
    repo: docs/${DRONE_REPO_NAME}
    tags:
    - git-${DRONE_COMMIT_SHA:0:7}-production
    - latest-production
    access_key:
      from_secret: ecr_access_key
    secret_key:
      from_secret: ecr_secret_key

# Promotes current drone build to production environment
- name: promote-production
  image: drone/cli:1.4.0-alpine
  commands:
  - drone build promote mongodb/snooty-data-api ${DRONE_BUILD_NUMBER} production
  environment:
    DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
    DRONE_TOKEN:
      from_secret: drone_token

---
kind: pipeline
type: kubernetes
name: production-deploy

trigger:
  event:
  - promote
  target:
  - production

steps:
# Deploys Docker image associated with production build that triggered promotion
- name: deploy-production
  image: quay.io/mongodb/drone-helm:v3
  settings:
    chart: mongodb/web-app
    chart_version: 4.12.3
    add_repos: [mongodb=https://10gen.github.io/helm-charts]
    namespace: docs
    release: snooty-data-api
    values: image.tag=git-${DRONE_COMMIT_SHA:0:7}-production,image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/docs/${DRONE_REPO_NAME},ingress.enabled=true,ingress.hosts[0]=snooty-data-api.docs.prod.corp.mongodb.com
    values_files: ['environments/production.yml']
    api_server: https://api.prod.corp.mongodb.com
    kubernetes_token:
      from_secret: prod_kubernetes_token
